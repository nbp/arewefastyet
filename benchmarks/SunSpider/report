==2558== Memcheck, a memory error detector
==2558== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==2558== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==2558== Command: /home/dvander/mozilla/tracemonkey/js/src/Debug64/js -j -f sunspider-0.9.1-results/sunspider-test-prefix.js -f resources/sunspider-standalone-driver.js
==2558== Parent PID: 2452
==2558== 
==2558== Invalid write of size 8
==2558==    at 0x49446F: js_ShrinkSlots (jsobj.cpp:2861)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x4342E0: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:316)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x49DE34: js_TraceObject (jsobj.cpp:6581)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x4342E0: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:316)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x49DEE3: js_TraceObject (jsobj.cpp:6587)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x4342E0: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:316)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x5BB2F7: js_Interpret (jsops.cpp:1416)
==2558==    by 0x48277F: js_Execute (jsinterp.cpp:1633)
==2558==    by 0x424EA2: JS_ExecuteScript (jsapi.cpp:4829)
==2558==    by 0x40393D: Process(JSContext*, JSObject*, char*, int) (js.cpp:447)
==2558==    by 0x4045EB: ProcessArgs(JSContext*, JSObject*, char**, int) (js.cpp:793)
==2558==    by 0x40C561: main (js.cpp:4971)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x427292: STOBJ_SET_SLOT (jsobj.h:490)
==2558==    by 0x5BB4C7: js_Interpret (jsops.cpp:1428)
==2558==    by 0x48277F: js_Execute (jsinterp.cpp:1633)
==2558==    by 0x424EA2: JS_ExecuteScript (jsapi.cpp:4829)
==2558==    by 0x40393D: Process(JSContext*, JSObject*, char*, int) (js.cpp:447)
==2558==    by 0x4045EB: ProcessArgs(JSContext*, JSObject*, char**, int) (js.cpp:793)
==2558==    by 0x40C561: main (js.cpp:4971)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x5C5A24: js_Interpret (jsops.cpp:2759)
==2558==    by 0x48277F: js_Execute (jsinterp.cpp:1633)
==2558==    by 0x424EA2: JS_ExecuteScript (jsapi.cpp:4829)
==2558==    by 0x40393D: Process(JSContext*, JSObject*, char*, int) (js.cpp:447)
==2558==    by 0x4045EB: ProcessArgs(JSContext*, JSObject*, char**, int) (js.cpp:793)
==2558==    by 0x40C561: main (js.cpp:4971)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x5C1742: js_Interpret (jsops.cpp:2347)
==2558==    by 0x48277F: js_Execute (jsinterp.cpp:1633)
==2558==    by 0x424EA2: JS_ExecuteScript (jsapi.cpp:4829)
==2558==    by 0x40393D: Process(JSContext*, JSObject*, char*, int) (js.cpp:447)
==2558==    by 0x4045EB: ProcessArgs(JSContext*, JSObject*, char**, int) (js.cpp:793)
==2558==    by 0x40C561: main (js.cpp:4971)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x47EEB1: js_FillPropertyCache (jsinterp.cpp:214)
==2558==    by 0x499291: js_FindPropertyHelper (jsobj.cpp:4752)
==2558==    by 0x5C14A2: js_Interpret (jsops.cpp:2325)
==2558==    by 0x48277F: js_Execute (jsinterp.cpp:1633)
==2558==    by 0x424EA2: JS_ExecuteScript (jsapi.cpp:4829)
==2558==    by 0x40393D: Process(JSContext*, JSObject*, char*, int) (js.cpp:447)
==2558==    by 0x4045EB: ProcessArgs(JSContext*, JSObject*, char**, int) (js.cpp:793)
==2558==    by 0x40C561: main (js.cpp:4971)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x49E1DD: js_GetReservedSlot (jsobj.cpp:6657)
==2558==    by 0x4231D4: JS_GetReservedSlot (jsapi.cpp:4040)
==2558==    by 0x497127: js_GetClassObject (jsobj.cpp:3941)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x468DD1: js_ErrorToException (jsexn.cpp:1157)
==2558==    by 0x43B299: ReportError(JSContext*, char const*, JSErrorReport*, JSErrorFormatString const* (*)(void*, char const*, unsigned int), void*) (jscntxt.cpp:1313)
==2558==    by 0x43C0ED: js_ReportErrorNumberVA(JSContext*, unsigned int, JSErrorFormatString const* (*)(void*, char const*, unsigned int), void*, unsigned int, int, __va_list_tag*) (jscntxt.cpp:1668)
==2558==    by 0x4266FF: JS_ReportErrorFlagsAndNumber (jsapi.cpp:5474)
==2558==    by 0x43C731: js_ReportValueErrorFlags(JSContext*, unsigned int, unsigned int, int, long, JSString*, char const*, char const*) (jscntxt.cpp:1798)
==2558==    by 0x470E5C: js_ReportIsNotFunction (jsfun.cpp:2718)
==2558==    by 0x481DA7: js_Invoke (jsinterp.cpp:1407)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x49E1FC: js_GetReservedSlot (jsobj.cpp:6657)
==2558==    by 0x4231D4: JS_GetReservedSlot (jsapi.cpp:4040)
==2558==    by 0x497127: js_GetClassObject (jsobj.cpp:3941)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x468DD1: js_ErrorToException (jsexn.cpp:1157)
==2558==    by 0x43B299: ReportError(JSContext*, char const*, JSErrorReport*, JSErrorFormatString const* (*)(void*, char const*, unsigned int), void*) (jscntxt.cpp:1313)
==2558==    by 0x43C0ED: js_ReportErrorNumberVA(JSContext*, unsigned int, JSErrorFormatString const* (*)(void*, char const*, unsigned int), void*, unsigned int, int, __va_list_tag*) (jscntxt.cpp:1668)
==2558==    by 0x4266FF: JS_ReportErrorFlagsAndNumber (jsapi.cpp:5474)
==2558==    by 0x43C731: js_ReportValueErrorFlags(JSContext*, unsigned int, unsigned int, int, long, JSString*, char const*, char const*) (jscntxt.cpp:1798)
==2558==    by 0x470E5C: js_ReportIsNotFunction (jsfun.cpp:2718)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x497720: js_FindClassObject (jsobj.cpp:4052)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x41C9FE: js_InitFunctionAndObjectClasses (jsapi.cpp:1148)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x4949BE: js_NewObject (jsobj.cpp:3012)
==2558==    by 0x470251: js_NewFunction (jsfun.cpp:2443)
==2558==    by 0x47083C: js_DefineFunction (jsfun.cpp:2597)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x497720: js_FindClassObject (jsobj.cpp:4052)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x4949BE: js_NewObject (jsobj.cpp:3012)
==2558==    by 0x470251: js_NewFunction (jsfun.cpp:2443)
==2558==    by 0x47083C: js_DefineFunction (jsfun.cpp:2597)
==2558==    by 0x496BBF: js_InitClass (jsobj.cpp:3808)
==2558==    by 0x41F4AC: JS_InitClass (jsapi.cpp:2619)
==2558==    by 0x470157: js_InitFunctionClass (jsfun.cpp:2423)
==2558==    by 0x41CA30: js_InitFunctionAndObjectClasses (jsapi.cpp:1153)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x427292: STOBJ_SET_SLOT (jsobj.h:490)
==2558==    by 0x498871: js_DefineNativeProperty (jsobj.cpp:4487)
==2558==    by 0x498262: js_DefineProperty (jsobj.cpp:4339)
==2558==    by 0x427049: JSObject::defineProperty(JSContext*, long, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int) (jsobj.h:386)
==2558==    by 0x4708C1: js_DefineFunction (jsfun.cpp:2600)
==2558==    by 0x496BBF: js_InitClass (jsobj.cpp:3808)
==2558==    by 0x41F4AC: JS_InitClass (jsapi.cpp:2619)
==2558==    by 0x470157: js_InitFunctionClass (jsfun.cpp:2423)
==2558==    by 0x41CA30: js_InitFunctionAndObjectClasses (jsapi.cpp:1153)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x427292: STOBJ_SET_SLOT (jsobj.h:490)
==2558==    by 0x49E3F6: js_SetReservedSlot (jsobj.cpp:6704)
==2558==    by 0x423210: JS_SetReservedSlot (jsapi.cpp:4047)
==2558==    by 0x4973A0: js_SetClassObject (jsobj.cpp:3984)
==2558==    by 0x496E1C: js_InitClass (jsobj.cpp:3866)
==2558==    by 0x41F4AC: JS_InitClass (jsapi.cpp:2619)
==2558==    by 0x470157: js_InitFunctionClass (jsfun.cpp:2423)
==2558==    by 0x41CA30: js_InitFunctionAndObjectClasses (jsapi.cpp:1153)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x4949BE: js_NewObject (jsobj.cpp:3012)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x49E1DD: js_GetReservedSlot (jsobj.cpp:6657)
==2558==    by 0x4231D4: JS_GetReservedSlot (jsapi.cpp:4040)
==2558==    by 0x4972A3: js_GetClassObject (jsobj.cpp:3966)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x4949BE: js_NewObject (jsobj.cpp:3012)
==2558==    by 0x470251: js_NewFunction (jsfun.cpp:2443)
==2558==    by 0x47083C: js_DefineFunction (jsfun.cpp:2597)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x42721D: STOBJ_GET_SLOT (jsobj.h:480)
==2558==    by 0x49E1FC: js_GetReservedSlot (jsobj.cpp:6657)
==2558==    by 0x4231D4: JS_GetReservedSlot (jsapi.cpp:4040)
==2558==    by 0x4972A3: js_GetClassObject (jsobj.cpp:3966)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==    by 0x4949BE: js_NewObject (jsobj.cpp:3012)
==2558==    by 0x470251: js_NewFunction (jsfun.cpp:2443)
==2558==    by 0x47083C: js_DefineFunction (jsfun.cpp:2597)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x497BED: js_AllocSlot (jsobj.cpp:4145)
==2558==    by 0x4F790C: JSScope::getChildProperty(JSContext*, JSScopeProperty*, JSScopeProperty&) (jsscope.cpp:975)
==2558==    by 0x4F851C: JSScope::addPropertyHelper(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int, JSScopeProperty**) (jsscope.cpp:1286)
==2558==    by 0x4F87DE: JSScope::putProperty(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int) (jsscope.cpp:1345)
==2558==    by 0x4987DD: js_DefineNativeProperty (jsobj.cpp:4480)
==2558==    by 0x498262: js_DefineProperty (jsobj.cpp:4339)
==2558==    by 0x427049: JSObject::defineProperty(JSContext*, long, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int) (jsobj.h:386)
==2558==    by 0x4708C1: js_DefineFunction (jsfun.cpp:2600)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==    by 0x49CB54: js_GetClassPrototype (jsobj.cpp:6175)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x4942CA: js_GrowSlots (jsobj.cpp:2830)
==2558==    by 0x497C19: js_AllocSlot (jsobj.cpp:4145)
==2558==    by 0x4F790C: JSScope::getChildProperty(JSContext*, JSScopeProperty*, JSScopeProperty&) (jsscope.cpp:975)
==2558==    by 0x4F851C: JSScope::addPropertyHelper(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int, JSScopeProperty**) (jsscope.cpp:1286)
==2558==    by 0x4F87DE: JSScope::putProperty(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int) (jsscope.cpp:1345)
==2558==    by 0x4987DD: js_DefineNativeProperty (jsobj.cpp:4480)
==2558==    by 0x498262: js_DefineProperty (jsobj.cpp:4339)
==2558==    by 0x427049: JSObject::defineProperty(JSContext*, long, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int) (jsobj.h:386)
==2558==    by 0x4708C1: js_DefineFunction (jsfun.cpp:2600)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==    by 0x4974E5: js_FindClassObject (jsobj.cpp:4028)
==2558==  Address 0x61c9298 is 8 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid read of size 8
==2558==    at 0x47E16F: js::GrowDSlots(JSContext*, JSObject*, unsigned long, unsigned long) (jsheap.cpp:208)
==2558==    by 0x494334: js_GrowSlots (jsobj.cpp:2834)
==2558==    by 0x497C19: js_AllocSlot (jsobj.cpp:4145)
==2558==    by 0x4F790C: JSScope::getChildProperty(JSContext*, JSScopeProperty*, JSScopeProperty&) (jsscope.cpp:975)
==2558==    by 0x4F851C: JSScope::addPropertyHelper(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int, JSScopeProperty**) (jsscope.cpp:1286)
==2558==    by 0x4F87DE: JSScope::putProperty(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int) (jsscope.cpp:1345)
==2558==    by 0x4987DD: js_DefineNativeProperty (jsobj.cpp:4480)
==2558==    by 0x498262: js_DefineProperty (jsobj.cpp:4339)
==2558==    by 0x427049: JSObject::defineProperty(JSContext*, long, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int) (jsobj.h:386)
==2558==    by 0x4708C1: js_DefineFunction (jsfun.cpp:2600)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==  Address 0x61c9290 is 16 bytes before a block of size 2,240 alloc'd
==2558==    at 0x4C2524D: realloc (vg_replace_malloc.c:476)
==2558==    by 0x40F9B0: js_realloc (jsutil.h:197)
==2558==    by 0x4278D8: JSRuntime::realloc(void*, unsigned long) (jscntxt.h:1077)
==2558==    by 0x427CDE: JSContext::realloc(void*, unsigned long) (jscntxt.h:1511)
==2558==    by 0x47E2FC: js::ShrinkDSlots(JSContext*, JSObject*, unsigned long) (jsheap.cpp:238)
==2558==    by 0x49445E: js_ShrinkSlots (jsobj.cpp:2860)
==2558==    by 0x49DD3D: js_TraceObject (jsobj.cpp:6549)
==2558==    by 0x475D66: JS_TraceChildren (jsgc.cpp:1858)
==2558==    by 0x476723: js_CallGCMarker (jsgc.cpp:2134)
==2558==    by 0x41E02C: JS_CallTracer (jsapi.cpp:1907)
==2558==    by 0x43435D: JSObject::traceProtoAndParent(JSTracer*) const (jsobj.h:320)
==2558==    by 0x49DE1A: js_TraceObject (jsobj.cpp:6570)
==2558== 
==2558== Invalid write of size 8
==2558==    at 0x47E1E2: js::GrowDSlots(JSContext*, JSObject*, unsigned long, unsigned long) (jsheap.cpp:218)
==2558==    by 0x494334: js_GrowSlots (jsobj.cpp:2834)
==2558==    by 0x497C19: js_AllocSlot (jsobj.cpp:4145)
==2558==    by 0x4F790C: JSScope::getChildProperty(JSContext*, JSScopeProperty*, JSScopeProperty&) (jsscope.cpp:975)
==2558==    by 0x4F851C: JSScope::addPropertyHelper(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int, JSScopeProperty**) (jsscope.cpp:1286)
==2558==    by 0x4F87DE: JSScope::putProperty(JSContext*, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int, unsigned int, unsigned int, int) (jsscope.cpp:1345)
==2558==    by 0x4987DD: js_DefineNativeProperty (jsobj.cpp:4480)
==2558==    by 0x498262: js_DefineProperty (jsobj.cpp:4339)
==2558==    by 0x427049: JSObject::defineProperty(JSContext*, long, long, int (*)(JSContext*, JSObject*, long, long*), int (*)(JSContext*, JSObject*, long, long*), unsigned int) (jsobj.h:386)
==2558==    by 0x4708C1: js_DefineFunction (jsfun.cpp:2600)
==2558==    by 0x468919: js_InitExceptionClasses (jsexn.cpp:1026)
==2558==    by 0x497276: js_GetClassObject (jsobj.cpp:3963)
==2558==  Address 0x61c9288 is not stack'd, malloc'd or (recently) free'd
==2558== 
==2558== 
==2558== HEAP SUMMARY:
==2558==     in use at exit: 2,240 bytes in 1 blocks
==2558==   total heap usage: 19,846 allocs, 19,845 frees, 15,083,980 bytes allocated
==2558== 
==2558== LEAK SUMMARY:
==2558==    definitely lost: 2,240 bytes in 1 blocks
==2558==    indirectly lost: 0 bytes in 0 blocks
==2558==      possibly lost: 0 bytes in 0 blocks
==2558==    still reachable: 0 bytes in 0 blocks
==2558==         suppressed: 0 bytes in 0 blocks
==2558== Rerun with --leak-check=full to see details of leaked memory
==2558== 
==2558== For counts of detected and suppressed errors, rerun with: -v
==2558== ERROR SUMMARY: 172 errors from 20 contexts (suppressed: 4 from 4)
